# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/security_guard/security_guard.gni")
import("//build/test.gni")

ohos_unittest("SecurityGuardRiskAnalysisTest") {
  install_enable = true
  part_name = "security_guard"
  subsystem_name = "security"
  module_out_path = part_name + "/" + part_name

  #resource_config_file = "resource/ohos_test.xml"

  include_dirs = [
    "include",
    "${sg_root_dir}/frameworks/common/constants/include",
    "${sg_root_dir}/frameworks/common/interfaces",
    "${sg_root_dir}/frameworks/common/json/include",
    "${sg_root_dir}/frameworks/common/task_handler/include",
    "${sg_root_dir}/frameworks/common/database/include",
    "${sg_root_dir}/frameworks/common/log/include",
    "${sg_root_dir}/frameworks/common/utils/include",
    "${sg_root_dir}/test/unittest/mock/account_manager",
    "${sg_root_dir}/test/unittest/mock/collector_manager",
    "${sg_root_dir}/test/unittest/mock/config_manager",
    "${sg_root_dir}/test/unittest/mock/data_collect",
    "${sg_root_dir}/test/unittest/mock/database_manager",
    "${sg_root_dir}/test/unittest/mock/device_manager",
    "${sg_root_dir}/test/unittest/mock/preferences",
    "${sg_root_dir}/test/unittest/mock/preferences_wrapper",
    "${sg_root_dir}/test/unittest/mock/accesstoken",
    "${sg_root_dir}/test/unittest/mock/rdb",
    "${sg_root_dir}/interfaces/inner_api/common/include",
  ]

  sources = [
    "${sg_root_dir}/frameworks/common/utils/src/security_guard_utils.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_callback_proxy.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_service.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_stub.cpp",
    "src/security_guard_risk_analysis_test.cpp",
  ]

  deps = [
    "${sg_root_dir}/services/bigdata:sg_bigdata_stamp",
    "${sg_root_dir}/services/config_manager:sg_config_manager",
    "${sg_root_dir}/services/risk_classify/model_manager:sg_model_manager_stamp",
    "//third_party/googletest:gmock",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:ability_manager",
    "ability_runtime:extension_manager",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "device_usage_statistics:usagestatsinner",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "os_account:os_account_innerkits",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}

group("unittest") {
  testonly = true
  deps = [ ":SecurityGuardRiskAnalysisTest" ]
}
