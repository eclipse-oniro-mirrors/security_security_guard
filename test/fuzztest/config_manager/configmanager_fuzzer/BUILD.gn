# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/security_guard/security_guard.gni")
import("//build/config/features.gni")
import("//build/test.gni")

ohos_fuzztest("ConfigManagerFuzzTest") {
  module_out_path = fuzz_test_output_path
  fuzz_config_file =
      "${sg_root_dir}/test/fuzztest/config_manager/configmanager_fuzzer"

  include_dirs = [
    "${sg_root_dir}/services/config_manager/include",
    "${sg_root_dir}/frameworks/common/constants/include",
    "${sg_root_dir}/frameworks/common/json/include",
    "${sg_root_dir}/frameworks/common/log/include",
    "${sg_root_dir}/frameworks/common/utils/include",
    "${sg_root_dir}/services/bigdata/include",
    "${sg_root_dir}/services/data_collect/store/include",
    "${sg_root_dir}/interfaces/inner_api/common/include",
    "${sg_root_dir}/interfaces/inner_api/classify/include",
    "${sg_root_dir}/frameworks/common/classify/include",
  ]
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
  ]

  defines = []
  defines += [
    "SECURITY_GUARD_EVENT_CFG_SOURCE = \"${security_guard_event_cfg_source}\"",
    "SECURITY_GUARD_MODEL_CFG_SOURCE = \"${security_guard_model_cfg_source}\"",
    "SECURITY_GUARD_EVENT_GROUP_CFG_SOURCE = \"${security_guard_event_group_cfg_source}\"",
    "SECURITY_GUARD_CONFIG_UPDATE_TRUST_LIST_SOURCE = \"${security_guard_config_update_trust_list_source}\"",
    "SECURITY_GUARD_COLLECTOR_CFG_SOURCE = \"${security_guard_collector_cfg_source}\"",
  ]
  sources = [
    "${sg_root_dir}/frameworks/common/utils/src/file_util.cpp",
    "${sg_root_dir}/frameworks/common/utils/src/json_util.cpp",
    "${sg_root_dir}/frameworks/common/json/src/json_cfg.cpp",
    "${sg_root_dir}/frameworks/common/utils/src/security_guard_utils.cpp",
    "${sg_root_dir}/services/config_manager/src/base_config.cpp",
    "${sg_root_dir}/services/config_manager/src/config_data_manager.cpp",
    "${sg_root_dir}/services/config_manager/src/config_manager.cpp",
    "${sg_root_dir}/services/config_manager/src/config_operator.cpp",
    "${sg_root_dir}/services/config_manager/src/config_subscriber.cpp",
    "${sg_root_dir}/services/config_manager/src/event_config.cpp",
    "${sg_root_dir}/services/config_manager/src/event_group_config.cpp",
    "${sg_root_dir}/services/config_manager/src/model_cfg_marshalling.cpp",
    "${sg_root_dir}/services/config_manager/src/model_config.cpp",
    "config_manager_fuzzer.cpp",
  ]

  deps = [
    "${sg_root_dir}/services/bigdata:sg_bigdata_stamp",
    "${sg_root_dir}/frameworks/common/collect:libsg_collect_sdk",
    "${sg_root_dir}/services/config_manager:sg_config_data_manager",
  ]

  external_deps = [
    "c_utils:utils",
    "cJSON:cjson",
    "ipc:ipc_core",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "json:nlohmann_json_static",
    "relational_store:native_rdb",
  ]
}
