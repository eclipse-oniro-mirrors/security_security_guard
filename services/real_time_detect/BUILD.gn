# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/security_guard/security_guard.gni")
import("//build/ohos.gni")

ohos_shared_library("real_time_detect_service") {
  subsystem_name = "security"
  part_name = "security_guard"

  include_dirs = [
    "include",
    "${sg_root_dir}/frameworks/common/interfaces",
    "${sg_root_dir}/interfaces/inner_api/collector/include",
    "${sg_root_dir}/interfaces/inner_api/acquire/include",
    "${sg_root_dir}/interfaces/inner_api/collect/include",
    "${sg_root_dir}/interfaces/inner_api/data_collect_manager/include",
    "${sg_root_dir}/services/real_time_detect/include",
    "${sg_root_dir}/frameworks/common/log/include",
    "${sg_root_dir}/frameworks/common/constants/include",
    "${sg_root_dir}/frameworks/common/json/include",
    "${sg_root_dir}/frameworks/common/utils/include",
    "${sg_root_dir}/interfaces/collect/include",
    "${sg_root_dir}/frameworks/common/task_handler/include",
  ]

  sources = [
    "${sg_root_dir}/frameworks/common/json/src/json_cfg.cpp",
    "${sg_root_dir}/frameworks/common/utils/src/security_guard_utils.cpp",
    "${sg_root_dir}/services/real_time_detect/real_time_detect_callback_proxy.cpp",
    "${sg_root_dir}/services/real_time_detect/real_time_detect_service.cpp",
    "${sg_root_dir}/services/real_time_detect/real_time_detect_stub.cpp",
  ]

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  stack_protector_ret = true

  deps = [
    "${sg_root_dir}/frameworks/common/task_handler:sg_task_stamp",
    "${sg_root_dir}/interfaces/inner_api/collect:libsg_collect_sdk",
    "${sg_root_dir}/interfaces/inner_api/collector:libsg_collector_sdk",
    "${sg_root_dir}/interfaces/inner_api/obtaindata:libsg_obtaindata_sdk",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:extension_manager",
    "access_token:libaccesstoken_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "device_manager:devicemanagersdk",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hisysevent:libhisyseventmanager",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "os_account:os_account_innerkits",
    "preferences:native_preferences",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}
