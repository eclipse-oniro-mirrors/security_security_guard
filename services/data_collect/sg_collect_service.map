/*
 * Copyright (C) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{
  global:
    extern "C++" {
      *OHOS::Security::SecurityGuard::DataCollectManagerService*;
      OHOS::Security::SecurityGuard::DataCollectManagerStub::OnRemoteRequest*;
      OHOS::Security::SecurityGuard::SecurityEventQueryCallbackProxy::SecurityEventQueryCallbackProxy*;
      vtable?for?OHOS::Security::SecurityGuard::RdbEventStoreCallback;
      OHOS::Security::SecurityGuard::Database::BatchInsert*;
      OHOS::Security::SecurityGuard::Database::CreateRdbStore*;
      OHOS::Security::SecurityGuard::Database::Count*;
      OHOS::Security::SecurityGuard::Database::Query*;
      OHOS::Security::SecurityGuard::Database::Delete*;
      OHOS::Security::SecurityGuard::Database::Insert*;
      OHOS::Security::SecurityGuard::DatabaseManager::GetInstance*;
      OHOS::Security::SecurityGuard::DatabaseManager::InsertEvent*;
      OHOS::Security::SecurityGuard::DatabaseManager::CountEventByEventId*;
      OHOS::Security::SecurityGuard::DatabaseManager::DeleteAllEventByEventId*;
      OHOS::Security::SecurityGuard::DatabaseManager::DeleteOldEventByEventId*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryAllEvent*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryRecentEventByEventId*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryEventByEventId*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryEventByEventType*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryEventByLevel*;
      OHOS::Security::SecurityGuard::DatabaseManager::QueryEventByOwner*;
      OHOS::Security::SecurityGuard::DatabaseManager::CountAllEvent*;
      OHOS::Security::SecurityGuard::DatabaseManager::SubscribeDb*;
      OHOS::Security::SecurityGuard::DatabaseManager::UnSubscribeDb*;
    };
  local:
    *;
};