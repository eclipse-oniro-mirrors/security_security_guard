# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/security_guard/security_guard.gni")
import("//build/ohos.gni")

config("security_guard_model_configs") {
  include_dirs = [
    "${sg_root_dir}/services/risk_classify/model_manager/include",
    "${sg_root_dir}/services/config_manager/include",
    "${sg_root_dir}/interfaces/inner_api/common/include",
  ]
}

ohos_shared_library("sg_classify_service") {
  subsystem_name = "security"
  part_name = "security_guard"

  version_script = "sg_classify_service.map"

  configs = [ "${sg_root_dir}/resource/config/build:coverage_flags" ]

  include_dirs = [
    "${sg_root_dir}/services/bigdata/include",
    "${sg_root_dir}/interfaces/inner_api/classify/include",
    "${sg_root_dir}/services/config_manager/include",
    "${sg_root_dir}/services/risk_classify/include",
    "${sg_root_dir}/services/risk_classify/model_manager/include",
    "${sg_root_dir}/services/data_collect/store/include",
    "${sg_root_dir}/frameworks/common/database/include",
    "${sg_root_dir}/frameworks/common/log/include",
    "${sg_root_dir}/frameworks/common/constants/include",
    "${sg_root_dir}/frameworks/common/task_handler/include",
    "${sg_root_dir}/frameworks/common/utils/include",
    "${sg_root_dir}/frameworks/common/interfaces",
    "${sg_root_dir}/frameworks/common/json/include",
    "${sg_root_dir}/interfaces/inner_api/common/include",
  ]

  sources = [
    "${sg_root_dir}/frameworks/common/utils/src/security_guard_utils.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_callback_proxy.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_service.cpp",
    "${sg_root_dir}/services/risk_classify/src/risk_analysis_manager_stub.cpp",
  ]

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  deps = [
    "${sg_root_dir}/services/bigdata:sg_bigdata_stamp",
    "${sg_root_dir}/services/config_manager:sg_config_manager",
    "${sg_root_dir}/services/data_collect:sg_collect_service",
    "${sg_root_dir}/services/risk_classify/model_manager:sg_model_manager_stamp",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "ipc:ipc_core",
    "json:nlohmann_json_static",
    "relational_store:native_rdb",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
}
