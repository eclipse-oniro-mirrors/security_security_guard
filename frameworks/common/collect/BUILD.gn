# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/security_guard/security_guard.gni")
import("//build/ohos.gni")

config("security_guard_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "${sg_root_dir}/interfaces/inner_api/collect/include",
    "${sg_root_dir}/interfaces/inner_api/common/include",
    "${sg_root_dir}/interfaces/inner_api/collector/include",
  ]
}

ohos_source_set("sg_collect_sdk_stamp") {
  subsystem_name = "security"
  part_name = "security_guard"
  configs = [ "${sg_root_dir}/resource/config/build:coverage_flags" ]

  public_configs = [ ":security_guard_config" ]

  include_dirs = [
    "include",
    "${sg_root_dir}/frameworks/common/constants/include",
    "${sg_root_dir}/interfaces/inner_api/collect/include",
    "${sg_root_dir}/frameworks/common/collect/include",
    "${sg_root_dir}/interfaces/inner_api/collector/include",
    "${sg_root_dir}/frameworks/common/collector/include",
    "${sg_root_dir}/interfaces/inner_api/common/include",
    "${sg_root_dir}/frameworks/common/log/include",
    "${sg_root_dir}/frameworks/common/utils/include",
  ]

  sources = [
    "src/acquire_data_manager_callback_service.cpp",
    "src/acquire_data_manager_callback_stub.cpp",
    "src/data_collect_manager.cpp",
    "src/data_collect_manager_callback_service.cpp",
    "src/data_collect_manager_callback_stub.cpp",
    "src/event_info.cpp",
    "src/security_event_filter.cpp",
    "src/security_event_query_callback_service.cpp",
    "src/security_event_query_callback_stub.cpp",
    "src/sg_collect_client.cpp",
    "src/sg_obtaindata_client.cpp",
  ]

  deps = [
    "${sg_root_dir}/services/data_collect/idl:data_collect_manager_idl_sa_proxy",
    "${sg_root_dir}/frameworks/common/collector:sg_collector_sdk_stamp",
    "${sg_root_dir}/frameworks/common/utils:security_guard_utils_stamp",
  ]

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
}

ohos_shared_library("libsg_collect_sdk") {
  innerapi_tags = [
    "platformsdk",
    "sasdk",
  ]
  subsystem_name = "security"
  part_name = "security_guard"
  output_name = "libsg_collect_sdk"
  version_script = "sg_collect_sdk.map"
  configs = [ "${sg_root_dir}/resource/config/build:coverage_flags" ]
  public_configs = [ ":security_guard_config" ]
  deps = [ "${sg_root_dir}/services/data_collect/idl:data_collect_manager_idl_sa_proxy",
    ":sg_collect_sdk_stamp" ]

  sanitize = {
    integer_overflow = true
    ubsan = true
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
  }
  branch_protector_ret = "pac_ret"

  external_deps = [
    "hilog:libhilog",
  ]
}
